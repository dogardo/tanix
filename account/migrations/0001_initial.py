# Generated by Django 4.1.2 on 2022-11-27 15:04

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='usercore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='place mail adress')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='name')),
                ('surname', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='surname')),
                ('place_name', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='place name')),
                ('pic1', models.ImageField(blank=True, null=True, upload_to='uploads/user/', verbose_name='pic1')),
                ('pic2', models.ImageField(blank=True, null=True, upload_to='uploads/user/', verbose_name='pic2')),
                ('pic3', models.ImageField(blank=True, null=True, upload_to='uploads/user/', verbose_name='pic3')),
                ('pic4', models.ImageField(blank=True, null=True, upload_to='uploads/user/', verbose_name='pic4')),
                ('pic5', models.ImageField(blank=True, null=True, upload_to='uploads/user/', verbose_name='pic5')),
                ('gender', models.CharField(blank=True, choices=[('Kadın', 'Kadın'), ('Erkek', 'Erkek'), ('Diğer', 'Diğer')], default=None, max_length=10, null=True)),
                ('phone', models.IntegerField(unique=True, verbose_name='phone')),
                ('ranking', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='ranking')),
                ('money', models.IntegerField(blank=True, null=True, verbose_name='money')),
                ('verify', models.BooleanField(default=True, verbose_name='can avaliable')),
                ('can_enter_game', models.BooleanField(default=True, verbose_name='can avaliable')),
                ('verify_pic', models.ImageField(blank=True, null=True, upload_to='uploads/user/', verbose_name='vpic')),
                ('max_table_normal', models.IntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='classic game existence')),
                ('max_table_not_normal', models.IntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='spesific game existence')),
                ('place_avabiality_normal', models.BooleanField(blank=True, null=True, verbose_name='place avabiality for normal game')),
                ('place_avabiality_not_normal', models.BooleanField(blank=True, null=True, verbose_name='place avabiality for spesific game')),
                ('acc_can_open_normal_game', models.BooleanField(default=True, verbose_name='can open normal loby')),
                ('acc_can_open_not_normal_game', models.BooleanField(default=True, verbose_name='can open spesific game')),
                ('user_type', models.IntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='user type')),
                ('date_joined', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is admin')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is superuser')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='between_two_ferns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_itself', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='name')),
                ('c_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='consumer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='place mail adress')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('surname', models.CharField(max_length=200, verbose_name='surname')),
                ('pic1', models.ImageField(blank=True, null=True, upload_to='uploads/consumer', verbose_name='pic1')),
                ('pic2', models.ImageField(blank=True, null=True, upload_to='uploads/consumer', verbose_name='pic2')),
                ('pic3', models.ImageField(blank=True, null=True, upload_to='uploads/consumer', verbose_name='pic3')),
                ('pic4', models.ImageField(blank=True, null=True, upload_to='uploads/consumer', verbose_name='pic4')),
                ('pic5', models.ImageField(blank=True, null=True, upload_to='uploads/consumer', verbose_name='pic5')),
                ('gender', models.CharField(choices=[('Kadın', 'Kadın'), ('Erkek', 'Erkek'), ('Diğer', 'Diğer')], max_length=10)),
                ('phone', models.IntegerField(unique=True, verbose_name='phone')),
                ('ranking', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='ranking')),
                ('money', models.IntegerField(blank=True, default=0, null=True, verbose_name='money')),
                ('verify', models.BooleanField(default=True, verbose_name='can avaliable')),
                ('can_enter_game', models.BooleanField(default=True, verbose_name='can avaliable')),
                ('verify_pic', models.ImageField(blank=True, null=True, upload_to='uploads/consumers/', verbose_name='vpic')),
                ('date_joined', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
            ],
        ),
        migrations.CreateModel(
            name='message_manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='placer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='place mail adress')),
                ('place_name', models.CharField(max_length=200, verbose_name='place name')),
                ('min_price', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='value')),
                ('pic1', models.ImageField(blank=True, null=True, upload_to='uploads/placer', verbose_name='pic1')),
                ('pic2', models.ImageField(blank=True, null=True, upload_to='uploads/placer', verbose_name='pic2')),
                ('pic3', models.ImageField(blank=True, null=True, upload_to='uploads/placer', verbose_name='pic3')),
                ('pic4', models.ImageField(blank=True, null=True, upload_to='uploads/placer', verbose_name='pic4')),
                ('pic5', models.ImageField(blank=True, null=True, upload_to='uploads/placer', verbose_name='pic5')),
                ('max_table_normal', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='classic game existence')),
                ('max_table_not_normal', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='spesific game existence')),
                ('place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('acc_can_open_normal_game', models.BooleanField(default=True, verbose_name='can open normal loby')),
                ('acc_can_open_not_normal_game', models.BooleanField(default=True, verbose_name='can open spesific game')),
                ('a11_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h1 classic game existence')),
                ('a11_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h1 spesific game existence')),
                ('a11_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a11_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a12_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h2 classic game existence')),
                ('a12_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h2 spesific game existence')),
                ('a12_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a12_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a13_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h3 classic game existence')),
                ('a13_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h3 spesific game existence')),
                ('a13_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a13_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a14_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h4 classic game existence')),
                ('a14_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h4 spesific game existence')),
                ('a14_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a14_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a15_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h5 classic game existence')),
                ('a15_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d1/h5 spesific game existence')),
                ('a15_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a15_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a21_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h1 classic game existence')),
                ('a21_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h1 spesific game existence')),
                ('a21_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a21_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a22_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h2 classic game existence')),
                ('a22_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h2 spesific game existence')),
                ('a22_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a22_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a23_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h3 classic game existence')),
                ('a23_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h3 spesific game existence')),
                ('a23_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a23_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a24_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h4 classic game existence')),
                ('a24_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h4 spesific game existence')),
                ('a24_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a24_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a25_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h5 classic game existence')),
                ('a25_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h5 spesific game existence')),
                ('a25_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a25_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a31_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h1 classic game existence')),
                ('a31_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h1 spesific game existence')),
                ('a31_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a31_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a32_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h2 classic game existence')),
                ('a32_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h2 spesific game existence')),
                ('a32_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a32_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a33_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h3 classic game existence')),
                ('a33_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h3 spesific game existence')),
                ('a33_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a33_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a34_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h4 classic game existence')),
                ('a34_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h4 spesific game existence')),
                ('a34_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a34_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a35_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h5 classic game existence')),
                ('a35_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d3/h5 spesific game existence')),
                ('a35_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a35_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a41_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h1 classic game existence')),
                ('a41_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h1 spesific game existence')),
                ('a41_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a41_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a42_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h2 classic game existence')),
                ('a42_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h2 spesific game existence')),
                ('a42_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a42_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a43_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h3 classic game existence')),
                ('a43_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h3 spesific game existence')),
                ('a43_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a43_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a44_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h4 classic game existence')),
                ('a44_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h4 spesific game existence')),
                ('a44_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a44_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a45_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h5 classic game existence')),
                ('a45_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d4/h5 spesific game existence')),
                ('a45_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a45_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a51_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h1 classic game existence')),
                ('a51_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h1 spesific game existence')),
                ('a51_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a51_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a52_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h2 classic game existence')),
                ('a52_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h2 spesific game existence')),
                ('a52_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a52_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a53_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h3 classic game existence')),
                ('a53_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h3 spesific game existence')),
                ('a53_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a53_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a54_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h4 classic game existence')),
                ('a54_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h4 spesific game existence')),
                ('a54_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a54_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a55_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h5 classic game existence')),
                ('a55_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d5/h5 spesific game existence')),
                ('a55_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a55_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a61_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h1 classic game existence')),
                ('a61_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h1 spesific game existence')),
                ('a61_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a61_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a62_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h2 classic game existence')),
                ('a62_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h2 spesific game existence')),
                ('a62_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a62_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a63_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h3 classic game existence')),
                ('a63_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h3 spesific game existence')),
                ('a63_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a63_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a64_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h4 classic game existence')),
                ('a64_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h4 spesific game existence')),
                ('a64_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a64_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a65_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h5 classic game existence')),
                ('a65_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d6/h5 spesific game existence')),
                ('a65_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a65_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a71_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h1 classic game existence')),
                ('a71_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h1 spesific game existence')),
                ('a71_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a71_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a72_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h5 classic game existence')),
                ('a72_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d2/h5 spesific game existence')),
                ('a72_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a72_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a73_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h3 classic game existence')),
                ('a73_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h3 spesific game existence')),
                ('a73_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a73_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a74_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h4 classic game existence')),
                ('a74_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h4 spesific game existence')),
                ('a74_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a74_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a75_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h5 classic game existence')),
                ('a75_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d7/h5 spesific game existence')),
                ('a75_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a75_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a81_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h1 classic game existence')),
                ('a81_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h1 spesific game existence')),
                ('a81_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a81_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a82_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h2 classic game existence')),
                ('a82_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h2 spesific game existence')),
                ('a82_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a82_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a83_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h3 classic game existence')),
                ('a83_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h3 spesific game existence')),
                ('a83_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a83_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a84_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h4 classic game existence')),
                ('a84_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h4 spesific game existence')),
                ('a84_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a84_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a85_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h5 classic game existence')),
                ('a85_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d8/h5 spesific game existence')),
                ('a85_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a85_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a91_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h1 classic game existence')),
                ('a91_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h1 spesific game existence')),
                ('a91_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a91_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a92_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h2 classic game existence')),
                ('a92_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h2 spesific game existence')),
                ('a92_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a92_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a93_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h3 classic game existence')),
                ('a93_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h3 spesific game existence')),
                ('a93_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a93_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a94_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h4 classic game existence')),
                ('a94_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h4 spesific game existence')),
                ('a94_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a94_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a95_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h5 classic game existence')),
                ('a95_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d9/h5 spesific game existence')),
                ('a95_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a95_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a101_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h1 classic game existence')),
                ('a101_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h1 spesific game existence')),
                ('a101_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a101_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a102_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h2 classic game existence')),
                ('a102_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h2 spesific game existence')),
                ('a102_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a102_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a103_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h3 classic game existence')),
                ('a103_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h3 spesific game existence')),
                ('a103_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a103_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a104_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h4 classic game existence')),
                ('a104_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h4 spesific game existence')),
                ('a104_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a104_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('a105_max_table_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h5 classic game existence')),
                ('a105_max_table_not_normal', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)], verbose_name='d10/h5 spesific game existence')),
                ('a105_place_avabiality_normal', models.BooleanField(default=1, verbose_name='place avabiality for normal game')),
                ('a105_place_avabiality_not_normal', models.BooleanField(default=True, verbose_name='place avabiality for spesific game')),
                ('phone', models.IntegerField(unique=True, verbose_name='phone')),
                ('ranking', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='ranking')),
                ('money', models.IntegerField(blank=True, null=True, verbose_name='money')),
                ('verify', models.BooleanField(default=True, verbose_name='verify')),
                ('verify_pic', models.ImageField(blank=True, null=True, upload_to='uploads/placers/', verbose_name='vpic')),
                ('date_joined', models.DateTimeField(auto_now=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
            ],
        ),
    ]
